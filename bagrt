#pragma once
#include <iostream>
#include <chrono>
#include <functional>
#include <cmath>

#define BASEALGO_BEGIN  namespace bagrt {
#define BASEALGO_END    }

#define IDX_ZERO    0
#define IDX_SGL     1
#define IDX_MAX     128

#include "bagrt.hpp"

template<typename _Ty> using set        =   bagrt::net_queue<_Ty>;
template<typename _Ty> using seq        =   bagrt::net_sequence<_Ty>;
template<typename _Ty> using vect_t     =   set<set<_Ty>>;
template<typename _Ty> using mem_ptr    =   typename bagrt::memory_sequence<_Ty>::_pointer;

bagrt::clock_timer<uint64_t>    clock_note;

#define CLOCK_BEGIN(LOG_ID)     clock_note.clock_begin(LOG_ID);
#define CLOCK_END(LOG_ID)       clock_note.clock_end(LOG_ID);
#define CLOCK_DURATION(LOG_ID)  clock_note.duration(LOG_ID)

#define PRINT_THREAD(TD_IDX)    std::cout << "Thread[" << TD_IDX << ']' << std::endl;
#define FRACTOR_RATE(NUM, DOM)  bagrt::num_rate(NUM, DOM)

#define ENTER                   std::cout << std::endl;